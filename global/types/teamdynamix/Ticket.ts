import Attribute from './Attribute';

export interface Ticket {
    ID: number;
    ParentID: number;
    ParentTitle: string;
    ParentClass: number;
    TypeID: number;
    TypeName: string;
    TypeCategoryID: number;
    TypeCategoryName: string;
    Classification: number;
    ClassificationName: string;
    FormID: number;
    FormName: string;
    Title: string;
    Description: string;
    Uri: string;
    AccountID: number;
    AccountName: string;
    SourceID: number;
    SourceName: string;
    StatusID: number;
    StatusName: string;
    StatusClass: number;
    ImpactID: number;
    ImpactName: string;
    UrgencyID: number;
    UrgencyName: string;
    PriorityID: number;
    PriorityName: string;
    PriorityOrder: number;
    SlaID: number;
    SlaName: string;
    IsSlaViolated: boolean;
    IsSlaRespondByViolated: boolean;
    IsSlaResolveByViolated: boolean;
    RespondByDate: string;
    ResolveByDate: string;
    SlaBeginDate: string;
    IsOnHold: boolean;
    PlacedOnHoldDate: string;
    GoesOffHoldDate: string;
    CreatedDate: string;
    CreatedUid: string;
    CreatedFullName: string;
    CreatedEmail: string;
    ModifiedDate: string;
    ModifiedUid: string;
    ModifiedFullName: string;
    RequestorName: string;
    RequestorFirstName: string;
    RequestorLastName: string;
    RequestorEmail: string;
    RequestorPhone: string;
    RequestorUid: string;
    ActualMinutes: number;
    EstimatedMinutes: number;
    DaysOld: number;
    StartDate: string;
    EndDate: string;
    ResponsibleUid: string;
    ResponsibleFullName: string;
    ResponsibleEmail: string;
    ResponsibleGroupID: number;
    ResponsibleGroupName: string;
    RespondedDate: string;
    RespondedUid: string;
    RespondedFullName: string;
    CompletedDate: string;
    CompletedUid: string;
    CompletedFullName: string;
    ReviewerUid: string;
    ReviewerFullName: string;
    ReviewerEmail: string;
    ReviewingGroupID: number;
    ReviewingGroupName: string;
    TimeBudget: number;
    ExpensesBudget: number;
    TimeBudgetUsed: number;
    ExpensesBudgetUsed: number;
    IsConvertedToTask: boolean;
    ConvertedToTaskDate: string;
    ConvertedToTaskUid: string;
    ConvertedToTaskFullName: string;
    TaskProjectID: number;
    TaskProjectName: string;
    TaskPlanID: number;
    TaskPlanName: string;
    TaskID: number;
    TaskTitle: string;
    TaskStartDate: string;
    TaskEndDate: string;
    TaskPercentComplete: number;
    LocationID: number;
    LocationName: string;
    LocationRoomID: number;
    LocationRoomName: string;
    RefCode: string;
    ServiceID: number;
    ServiceName: string;
    ServiceOfferingID: number;
    ServiceOfferingName: string;
    ServiceCategoryID: number;
    ServiceCategoryName: string;
    ArticleID: number;
    ArticleSubject: string;
    ArticleStatus: number;
    ArticleCategoryPathNames: string;
    ArticleAppID: number;
    ArticleShortcutID: number;
    AppID: number;
    Attributes: Attribute[];
    Attachments: any[];
    Tasks: any[];
    Notify: any[];
    WorkflowID: number;
    WorkflowConfigurationID: number;
    WorkflowName: string;
}

type OptionalFields =
    | 'FormID'
    | 'Description'
    | 'SourceID'
    | 'ImpactID'
    | 'UrgencyID'
    | 'GoesOffHoldDate'
    | 'EstimatedMinutes'
    | 'StartDate'
    | 'EndDate'
    | 'ResponsibleUid'
    | 'ResponsibleGroupID'
    | 'TimeBudget'
    | 'ExpensesBudget'
    | 'LocationID'
    | 'LocationRoomID'
    | 'ServiceID'
    | 'ServiceOfferingID'
    | 'ArticleID'
    | 'ArticleShortcutID'
    | 'Attributes';

type RequiredFields = 'TypeID' | 'Title' | 'AccountID' | 'StatusID' | 'PriorityID' | 'RequestorUid';

export type TicketEditable = Partial<Pick<Ticket, OptionalFields>> & Pick<Ticket, RequiredFields>;
